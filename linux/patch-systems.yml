---
- hosts: "{{ satellite_group_name | default ('all') }}"
  tasks:
    - name: "Patch RHEL 6 Servers"
      vars:
        patch_display_patch_output: true
      block:
        - name: "RHEL6: Update packages"
          ansible.builtin.package:
            name: "{{ patch_pkgs | default('*') }}"
            state: "latest"
            update_cache: "yes"
          register: "patch_yum_results"
          retries: "3"
          until: "patch_yum_results is succeeded"
          notify:
            - "Reboot RHEL 6 after patching"

        - name: "RHEL6: Output collected yum update output"
          ansible.builtin.debug:
            var: "patch_yum_results.results"
          when: "patch_display_patch_output"

      when:
        - 'ansible_os_family == "RedHat"'
        - 'ansible_distribution_major_version == "6"'

    - name: "Patch RHEL 7 Servers"
      vars:
        patch_display_patch_output: true
        patch_reboot_server: true
        patch_restart_services: true
      block:
       - name: "RHEL7: Ensure yum-utils is installed"
         ansible.builtin.package:
           name: "yum-utils"
           state: "present"
         register: "patch_utils_installed"
         retries: "3"
         until: "patch_utils_installed is succeeded"
    
       - name: "RHEL7: Update packages"
         ansible.builtin.package:
           name: "{{ patch_pkgs | default('*') }}"
           state: "latest"
           update_cache: "yes"
         register: "patch_yum_results"
         retries: "3"
         until: "patch_yum_results is succeeded"

       - name: "RHEL7: Check if services need restarting"
         ansible.builtin.command: 'needs-restarting -s'
         register: "needs_service_restart"
         changed_when: "needs_service_restart.rc != 0"
         notify:
           - "Restart required services"
         when: 'patch_restart_services'

       - name: "RHEL7: Check if reboot is required"
         ansible.builtin.command:  'needs-restarting -r'
         register: "needs_reboot"
         changed_when: "needs_reboot.rc == 1"
         failed_when: "needs_reboot.rc > 1"
         notify:
           - "Reboot after patching"
         when: 'patch_reboot_server'

       - name: "RHEL7: Output collected yum update output"
         ansible.builtin.debug:
           var: "patch_yum_results.results"
         when: "patch_display_patch_output"
      when:
        - 'ansible_os_family == "RedHat"'
        - 'ansible_distribution_major_version == "7"'
        
    - name: "Patch RHEL 8 Servers"
      vars:
        patch_display_patch_output: true
        patch_reboot_server: true
        patch_restart_services: true
      block:
        - name: "RHEL8: Ensure yum-utils is installed"
          ansible.builtin.package:
            name: "yum-utils"
            state: "present"
          register: "patch_utils_installed"
          retries: "3"
          until: "patch_utils_installed is succeeded"

        - name: "RHEL8: Update packages"
          ansible.builtin.package:
            name: "{{ patch_pkgs | default('*') }}"
            state: "latest"
            update_cache: "yes"
          register: "patch_yum_results"
          retries: "3"
          until: "patch_yum_results is succeeded"

        - name: "RHEL8: Check if services need restarting"
          ansible.builtin.command: 'needs-restarting -s'
          register: "needs_service_restart"
          changed_when: "needs_service_restart.rc != 0"
          notify:
            - "Restart required services"
          when: 'patch_restart_services'

        - name: "RHEL8: Check if reboot is required"
          ansible.builtin.command: 'needs-restarting -r'
          register: "needs_reboot"
          changed_when: "needs_reboot.rc == 1"
          failed_when: "needs_reboot.rc > 1"
          notify:
            - "Reboot after patching"
          when: 'patch_reboot_server'

        - name: "RHEL8: Output collected yum update output"
          ansible.builtin.debug:
            var: "patch_yum_results.results"
          when: "patch_display_patch_output"
      when:
        - 'ansible_os_family == "RedHat"'
        - 'ansible_distribution_major_version == "8"'

    - name: "Patch RHEL 9 Servers"
      vars:
        patch_display_patch_output: true
        patch_reboot_server: true
        patch_restart_services: true
      block:
        - name: "RHEL9: Ensure yum-utils is installed"
          ansible.builtin.package:
            name: "yum-utils"
            state: "present"
          register: "patch_utils_installed"
          retries: "3"
          until: "patch_utils_installed is succeeded"

        - name: "RHEL9: Update packages"
          ansible.builtin.package:
            name: "{{ patch_pkgs | default('*') }}"
            state: "latest"
            update_cache: "yes"
          register: "patch_yum_results"
          retries: "3"
          until: "patch_yum_results is succeeded"

        - name: "RHEL9: Check if services need restarting"
          ansible.builtin.command: 'needs-restarting -s'
          register: "needs_service_restart"
          changed_when: "needs_service_restart.rc != 0"
          notify:
            - "Restart required services"
          when: 'patch_restart_services'

        - name: "RHEL9: Check if reboot is required"
          ansible.builtin.command: 'needs-restarting -r'
          register: "needs_reboot"
          changed_when: "needs_reboot.rc == 1"
          failed_when: "needs_reboot.rc > 1"
          notify:
            - "Reboot after patching"
          when: 'patch_reboot_server'

        - name: "RHEL9: Output collected yum update output"
          ansible.builtin.debug:
            var: "patch_yum_results.results"
          when: "patch_display_patch_output"
      when:
        - 'ansible_os_family == "RedHat"'
        - 'ansible_distribution_major_version == "9"'

  handlers:
    - name: "Restart required services"
      ansible.builtin.service:
        name: "{{ item }}"
        state: "restarted"
      when:
        - 'needs_reboot.rc != 1'
        - 'ansible_distribution_major_version != "6"'
      loop: "{{ needs_service_restart.stdout_lines }}"

    - name: "Reboot after patching"
      ansible.builtin.reboot:
        msg: "{{ patch_reboot_message | default('Rebooting due to patching.') }}"

    - name: "Reboot RHEL 6 after patching"
      ansible.builtin.reboot:
        msg: "{{ patch_reboot_message | default('Rebooting due to patching.') }}"
